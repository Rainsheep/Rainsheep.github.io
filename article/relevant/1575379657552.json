{"relevantArticles":[{"articleTitle":"Java中List, Integer[], int[]的相互转换","articleAbstractText":"有时候 list和数组 int[]转换很麻烦。 List和 String[]也同理。难道每次非得写一个循环遍历吗？其实一步就可以搞定。 本文涉及到一些 Java8 的特性。如果没有接触过就先学会怎么用，然后再细细研究。 package package1; import java.util.Arrays; import java.util.List; import java.util.stream.Collectors; import java.util.stream.Stream; public class Main { public static void main(String[] args) { int[] arr = {1, 2, 3, 4, 5}; // int[] 转 List&lt;Integer&gt;  List&lt;Integer&gt; list1 = Arrays.stream(arr).boxed().collect(Collectors.toList()); //1.调用Arrays.stream()将int[]变为IntStream流,注意不能用Stre....","articleStatus":0,"articlePermalink":"/articles/2019/12/04/1575442558951.html","articleImg1URL":"https://img.hacpai.com/bing/20180101.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"JAVA正则表达式总结","articleAbstractText":"正则表达式匹配常用字符（只含常用）： 字符：   x 字符x   \\n 新行（换行）符 ('\\u000A')   \\t 制表符 ('\\u0009')  字符类：   [abc] a、b 或 c（简单类）   [^abc] 任何字符，除了 a、b 或 c（否定）   [a-zA-Z] a 到 z 或 A 到 Z，两头的字母包括在内（范围）   [a-d[m-p]] a 到 d 或 m 到 p：[a-dm-p]（并集） |   [a-z&amp;&amp;[def]] d、e 或 f（交集）   [a-z&amp;&amp;[^bc]] a 到 z，除了 b 和 c：[ad-z]（减去）   [a-z&amp;&amp;[^m-p]] a 到 z，而非 m 到 p：[a-lq-z]（减去）  预定义字符类：   . 任何字符（与行结束符可能匹配也可能不匹配）   \\d 数字：[0-9]   \\D 非数字： [^0-9]   \\s 空白字符：[ \\t\\n\\x0B\\f\\r]   \\S 非空白字符：[^\\s]   \\w 单词字符：[a-zA-Z_0-9]    \\W 非单词字符：[^\\w]  边....","articleStatus":0,"articlePermalink":"/articles/2019/12/04/1575442507093.html","articleImg1URL":"https://img.hacpai.com/bing/20181229.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"矩形的交面积","articleAbstractText":"矩形边平行 X 轴或 Y 轴 输入：矩形某对角线上两个点 输出：交面积 #include&lt;iostream&gt; #include&lt;cmath&gt; using namespace std; int main() { double x1,y1,x2,y2; double x3,y3,x4,y4; double m1,m2,n1,n2; cin&gt;&gt;x1&gt;&gt;y1&gt;&gt;x2&gt;&gt;y2&gt;&gt;x3&gt;&gt;y3&gt;&gt;x4&gt;&gt;y4; m1=min(max(x1,x2),max(x3,x4)); n1=min(max(y1,y2),max(y3,y4)); m2=max(min(x1,x2),min(x3,x4)); n2=max(min(y1,y2),min(y3,y4)); if(m1&gt;m2&amp;&amp;n1&gt;n2) { cout&lt;&lt;(m1-m2)*(n1-n2)&lt;&lt;endl; } else cout&lt;&lt;\"0.00\"&lt;&lt;endl; r....","articleStatus":0,"articlePermalink":"/articles/2019/12/04/1575440043701.html","articleImg1URL":"https://img.hacpai.com/bing/20190211.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"Emmet常用语法","articleAbstractText":"官方文档：https://docs.emmet.io/cheat-sheet  HTML 初始结构(!) 先输入！然后按 tab 生成基础结构  id(#)和 class(.)  div#test &lt;div id=\"test\"&gt;&lt;/div&gt; div.test &lt;div class=\"test\"&gt;&lt;/div&gt; form#search.wide &lt;form id=\"search\" class=\"wide\"&gt;&lt;/form&gt; p.class1.class2.class3 &lt;p class=\"class1 class2 class3\"&gt;&lt;/p&gt;  子节点(&gt;)，兄弟结点(+)，上级节点(^)  div&gt;ul&gt;li&gt;p  &lt;div&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt;   div+ul+p  &lt;div&gt;&lt;/div&gt; &lt;....","articleStatus":0,"articlePermalink":"/articles/2020/01/01/1577858373027.html","articleImg1URL":"https://img.hacpai.com/file/2020/01/p20200101013412-55772897.png?imageView2/2/w/1280/format/jpg/interlace/1/q/100"},{"articleTitle":"IDAE记录","articleAbstractText":"快捷键 参考链接： Idea 快捷键大全    快捷键 功能     Ctrl+Y 删除光标所在行   Ctrl+D 复制光标所在行，插入光标位置下面   Ctrl+/ 单行注释，再按取消注释   Ctrl+Space 基本代码提示   Ctrl+O 覆盖重写方法   Ctrl+P 方法参数提示   Ctrl+N 查找类   Ctrl+左键 跳转到声明或用法   Ctrl+F12 显示当前文件的结构   Alt+Enter 导入包，自动修正代码   Alt+Insert 自动生成代码，toString，get，set 等方法   Shift+F6 重命名变量(所有此变量)   Alt+Shift+上下箭头 移动当前代码行   Ctrl+Shift+Space 智能代码提示   Ctrl+Shift+/ 注释选中代码，多行注释，再按取消注释   Ctrl + Shift + Enter 自动结束代码，行末自动添加分号   Ctrl + Alt + O 优化导入的类，可以对当前文件和整个包目录使用   Ctrl + Alt + 左键 跳转到实现   Ctrl+Alt+L 格式化代码   输....","articleStatus":0,"articlePermalink":"/articles/2020/01/07/1578385176961.html","articleImg1URL":"https://raw.githubusercontent.com/Rainsheep/pic-bed/master/img/2020-02-16+13:28:06+p_20200216012802.png?imageView2/1/w/1280/h/720/interlace/1/q/100"}]}