{"relevantArticles":[{"articleTitle":"Ajax 学习笔记","articleAbstractText":"1. AJAX 基础知识   概念：ASynchronous JavaScript And XML，异步的 JavaScript 和 XML   异步和同步：在客户端和服务器端相互通信的基础上  同步：客户端必须等待服务器端的响应。在等待的期间客户端不能做其他操作。 异步：客户端不需要等待服务器端的响应。在服务器处理请求的过程中，客户端可以进行其他的操作。      AJAX 是一种在无需重新加载整个网页的情况下，能够更新部分网页的技术。 通过在后台与服务器进行少量数据交换，AJAX 可以使网页实现异步更新。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。 传统的网页（不使用 AJAX）如果需要更新内容，必须重载整个网页页面。    原生的 JS 实现方式（了解） &lt;%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %&gt; &lt;html lang=\"zh_CN\"&gt; &lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;T....","articleStatus":0,"articlePermalink":"/articles/2020/02/29/1582959858110.html","articleImg1URL":"https://raw.githubusercontent.com/Rainsheep/pic-bed/master/img/2020-02-29+02:04:54+1.%E5%90%8C%E6%AD%A5%E5%92%8C%E5%BC%82%E6%AD%A5.bmp?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"微信小程序学习笔记","articleAbstractText":"1. 基础知识   小程序提供了自己的视图层描述语言 WXML 和 WXSS，以及 JavaScript，并在视图层与逻辑层间提供了数据传输和事件系统，让开发者能够专注于数据与逻辑。   小程序文件结构和传统web对比    结构 传统web 微信小程序     结构 HTML WXML   样式 CSS WXSS   逻辑 Javascript Javascript   配置 无 JSON      项目的基本目录：   全局配置：根目录下 app.json 文件用来对微信小程序进行全局配置，决定页面文件的路径、窗口表现、设置网络超时时间、设置多 tab 等。  pages 字段：用于描述当前小程序所有页面路径，这是为了让微信客户端知道当前你的小程序页面定义在哪个目录。 window 字段：定义小程序所有页面的顶部背景颜色，文字颜色定义等。  navigationBarBackgroundColor :导航栏背景颜色，如 #000000 navigationBarTextStyle : 导航栏标题颜色，仅支持 black / white navigationBarTitleText ....","articleStatus":0,"articlePermalink":"/articles/2020/03/27/1585322624228.html","articleImg1URL":"https://raw.githubusercontent.com/Rainsheep/pic-bed/master/img/2020-03-26+20:16:28+p_2020032620241624SS.png?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"ssm 整合","articleAbstractText":"1. 搭建整合环境  采用 XML+ 注解的方式进行整合 整合思路：  先搭建整合环境 再把 Spring 配置搭建完成 再使用 Spring 整合 SpringMVC 框架 最后使用 Spring 整合 MyBatis 框架   创建数据库和表结构 create database ssm; use ssm; create table account( id int primary key auto_increment, name varchar(20), money double );   Maven 坐标 &lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt; &lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4....","articleStatus":0,"articlePermalink":"/articles/2020/03/11/1583867371280.html","articleImg1URL":"https://raw.githubusercontent.com/Rainsheep/pic-bed/master/img/2020-03-11+01:06:38+02.bmp?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"JQuery 学习笔记","articleAbstractText":"1. jQuery 基础  概念：一个 JavaScript 框架。简化 JS 开发。 jQuery 版本：  1.x：兼容 ie678,使用最为广泛的，官方只做 BUG 维护，功能不再新增。因此一般项目来说，使用 1.x 版本就可以了。 2.x：不兼容 ie678，很少有人使用，官方只做 BUG 维护，功能不再新增。如果不考虑兼容低版本的浏览器可以使用 2.x。 3.x：不兼容 ie678，只支持最新的浏览器。除非特殊要求，一般不会使用 3.x 版本的，很多老的 jQuery 插件不支持这个版本。   jQuery 对象和 JS 对象区别与转换  jQuery 对象在操作时，更加方便。 jQuery 对象和 js 对象方法不通用的。 jQuery 对象转 js 对象：jQuery 对象[索引] 或者 jQuery 对象。get(索引)，一个元素索引为 0。 js 对象转 jQuery 对象：$(js 对象) 通过 $ 获取的对象为 jQuery 对象，而不是 js 对象。   使用 jQuery 对象的时候不需要再遍历数组。 // 将所有div中的内容改为aaa var div = ....","articleStatus":0,"articlePermalink":"/articles/2020/02/29/1582911792906.html","articleImg1URL":"https://img.hacpai.com/bing/20180917.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"flex布局","articleAbstractText":"参考： 30 分钟学会 Flex 布局 flex 布局 1. flex 布局 在传统网页开发，我们用的是盒模型，通过 display:inline | block | inline-block、 position、float 来实现布局，缺乏灵活性且有些适配效果难以实现。比如像下面这种常见的信息列表，要求内容高度不确定下保持垂直居中： 常见的信息列表排版方式 这种情况下，我们更建议用 flex 布局。 在开始介绍 flex 之前，为了表述方便，我们约定以下术语：采用 flex 布局的元素，简称为\u201c容器\u201d，在代码示例中以 container 表示容器的类名。容器内的元素简称为\u201c项目\u201d，在代码示例中以 item 表示项目的类名。 container 容器和 item 项目 2. 基本概念 flex 的目的是提供一种更灵活的布局模型，使容器能通过改变里面项目的高宽、顺序，来对可用空间实现最佳的填充，方便适配不同大小的内容区域。 在不固定高度信息的例子中，我们只需要在容器中设置以下两个属性即可实现内容不确定下的垂直居中。 1.container { 2 display: flex; 3 fle....","articleStatus":0,"articlePermalink":"/articles/2020/07/26/1595731170747.html","articleImg1URL":"https://raw.githubusercontent.com/Rainsheep/pic-bed/master/img/2020-07-20+22:59:52+p_2020072022223122SS.gif?imageView2/1/w/1280/h/720/interlace/1/q/100"}]}