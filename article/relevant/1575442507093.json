{"relevantArticles":[{"articleTitle":"SpringMVC 学习笔记","articleAbstractText":"1. SpringMVC 基础   SpringMVC 在 在 三层架构的位置   SpringMVC 的优势  清晰的角色划分：  前端控制器（DispatcherServlet） 请求到处理器映射（HandlerMapping） 处理器适配器（HandlerAdapter） 视图解析器（ViewResolver） 处理器或页面控制器（Controller） 验证器（ Validator） 命令对象（Command 请求参数绑定到的对象就叫命令对象） 表单对象（Form Object 提供给表单展示和提交到的对象就叫表单对象）。   分工明确，而且扩展点相当灵活，可以很容易扩展，虽然几乎不需要。 由于命令对象就是一个 POJO，无需继承框架特定 API，可以使用命令对象直接作为业务对象。 和 Spring 其他框架无缝集成，是其它 Web 框架所不具备的。 可适配，通过 HandlerAdapter 可以支持任意的类作为处理器。 可定制性，HandlerMapping、ViewResolver 等能够非常简单的定制。 功能强大的数据验证、格式化、绑定机制。 利用 Spring 提供的....","articleStatus":0,"articlePermalink":"/articles/2020/03/10/1583771477763.html","articleImg1URL":"https://raw.githubusercontent.com/Rainsheep/pic-bed/master/img/2020-03-04+13:26:52+01%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84.png?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"Emmet常用语法","articleAbstractText":"官方文档：https://docs.emmet.io/cheat-sheet  HTML 初始结构(!) 先输入！然后按 tab 生成基础结构  id(#)和 class(.)  div#test &lt;div id=\"test\"&gt;&lt;/div&gt; div.test &lt;div class=\"test\"&gt;&lt;/div&gt; form#search.wide &lt;form id=\"search\" class=\"wide\"&gt;&lt;/form&gt; p.class1.class2.class3 &lt;p class=\"class1 class2 class3\"&gt;&lt;/p&gt;  子节点(&gt;)，兄弟结点(+)，上级节点(^)  div&gt;ul&gt;li&gt;p  &lt;div&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt;   div+ul+p  &lt;div&gt;&lt;/div&gt; &lt;....","articleStatus":0,"articlePermalink":"/articles/2020/01/01/1577858373027.html","articleImg1URL":"https://img.hacpai.com/file/2020/01/p20200101013412-55772897.png?imageView2/2/w/1280/format/jpg/interlace/1/q/100"},{"articleTitle":"Java 格式化显示金额","articleAbstractText":"DecimalFormat decimalFormat = new DecimalFormat(\"###,###.00\"); System.out.println(decimalFormat.format(1002200999.22323)); //1,002,200,999.22","articleStatus":0,"articlePermalink":"/articles/2020/03/31/1585591249751.html","articleImg1URL":"https://img.hacpai.com/bing/20180416.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"PageHelper 使用方法","articleAbstractText":"1. 导入坐标 &lt;dependency&gt; &lt;groupId&gt;com.github.pagehelper&lt;/groupId&gt; &lt;artifactId&gt;pagehelper&lt;/artifactId&gt; &lt;version&gt;5.1.2&lt;/version&gt; &lt;/dependency&gt;  2. 配置插件  配置到 spring 和 mybait 整合的配置文件中  &lt;!--创建sqlSessionFactory--&gt; &lt;bean id=\"sqlSessionFactory\" class=\"org.mybatis.spring.SqlSessionFactoryBean\"&gt; &lt;property name=\"dataSource\" ref=\"dataSource\"&gt;&lt;/property&gt; &lt;!--配置mybatis 插件--&gt; &lt;property name=\"plugins\"&gt; &lt;set&gt; &lt;!--配置pageHelpe....","articleStatus":0,"articlePermalink":"/articles/2020/03/31/1585595975549.html","articleImg1URL":"https://img.hacpai.com/bing/20180109.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"IDAE记录","articleAbstractText":"快捷键 参考链接： Idea 快捷键大全    快捷键 功能     Ctrl+Y 删除光标所在行   Ctrl+D 复制光标所在行，插入光标位置下面   Ctrl+/ 单行注释，再按取消注释   Ctrl+Space 基本代码提示   Ctrl+O 覆盖重写方法   Ctrl+P 方法参数提示   Ctrl+N 查找类   Ctrl+左键 跳转到声明或用法   Ctrl+F12 显示当前文件的结构   Alt+Enter 导入包，自动修正代码   Alt+Insert 自动生成代码，toString，get，set 等方法   Shift+F6 重命名变量(所有此变量)   Alt+Shift+上下箭头 移动当前代码行   Ctrl+Shift+Space 智能代码提示   Ctrl+Shift+/ 注释选中代码，多行注释，再按取消注释   Ctrl + Shift + Enter 自动结束代码，行末自动添加分号   Ctrl + Alt + O 优化导入的类，可以对当前文件和整个包目录使用   Ctrl + Alt + 左键 跳转到实现   Ctrl+Alt+L 格式化代码   输....","articleStatus":0,"articlePermalink":"/articles/2020/01/07/1578385176961.html","articleImg1URL":"https://raw.githubusercontent.com/Rainsheep/pic-bed/master/img/2020-02-16+13:28:06+p_20200216012802.png?imageView2/1/w/1280/h/720/interlace/1/q/100"}]}